apiVersion: v1
kind: Namespace
metadata:
  name: istio-test
---
apiVersion: v1
kind: Service
metadata:
  name: fortio
  namespace: istio-test
spec:
  ports:
  - port: 8080
    name: http-echo
  - port: 8079
    name: grpc-ping
  selector:
    app: fortio
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/status: injected-version-root@4024c6b018a8-f27f2803f59994367c1cca47467c362b1702d605-f27f2803f59994367c1cca47467c362b1702d605
  creationTimestamp: null
  name: fortio
  namespace: istio-test
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: injected-version-root@4024c6b018a8-f27f2803f59994367c1cca47467c362b1702d605-f27f2803f59994367c1cca47467c362b1702d605
      creationTimestamp: null
      labels:
        app: fortio
    spec:
      containers:
      - args:
        - server
        image: docker.io/istio/fortio
        imagePullPolicy: Always
        name: fortio
        ports:
        - containerPort: 8080
        - containerPort: 8079
        resources:
          requests:
            cpu: 1000m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - fortio
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:8080
        - --discoveryRefreshDelay
        - 1s
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --connectTimeout
        - 10s
        - --statsdUdpAddress
        - istio-mixer.istio-system:9125
        - --proxyAdminPort
        - "15000"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: gcr.io/istio-testing/proxy_debug:weekly-staging
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources:
          requests:
            cpu: 1000m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args:
        - -p
        - "15001"
        - -u
        - "1337"
        image: gcr.io/istio-testing/proxy_init:weekly-staging
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      - args:
        - -c
        - sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t && ulimit -c
          unlimited
        command:
        - /bin/sh
        image: alpine
        imagePullPolicy: IfNotPresent
        name: enable-core-dump
        resources: {}
        securityContext:
          privileged: true
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: "0"
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
status: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: istio
  name: fortio-ingress
  namespace: istio-test
spec:
  rules:
    - host: fortio.weekly.istio.webinf.info
      http:
        paths:
          - path: /.*
            backend:
              serviceName: fortio
              servicePort: http-echo
---
