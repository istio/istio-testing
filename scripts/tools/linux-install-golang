#!/bin/bash

if [[ "$(uname)" != "Linux" ]]; then
  echo "Run on Linux only."
  exit 1
fi

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
# shellcheck disable=SC1090
. "${DIR}"/all-utilities || { echo "Cannot load Bash utilities" ; exit 1 ; }

GO_VERSION='1.12.5'
GO_BASE_URL="https://storage.googleapis.com/golang"
GO_ARCHIVE="go${GO_VERSION}.linux-amd64.tar.gz"
GO_URL="${GO_BASE_URL}/${GO_ARCHIVE}"
GO_DIRECTORY="${TOOLS_DIR}/go"

KIND_VERSION=v0.3.0

export GOPATH=/opt/go
mkdir -p ${GOPATH}/bin

function install_go_pkg() {
  go get github.com/github/hub
  go get github.com/golang/dep/cmd/dep
  go get github.com/jstemmer/go-junit-report
  GO111MODULE="on" go get sigs.k8s.io/kind@${KIND_VERSION}
}

function update_go() {
  # shellcheck disable=SC2155
  local go_current="$(go version | grep -oh '[0-9]*\.[0-9]*\.[0-9]*')" \
    || go_current='none'

  if [[ "${GO_VERSION}" != "${go_current}" ]]; then
    mkdir -p "${GO_DIRECTORY}"
    retry -n 3 wget -q -nc -P "${GO_DIRECTORY}" "${GO_URL}" \
      || error_exit 'Could not download go.'
    ${SUDO} tar -C /usr/local -xzf "${GO_DIRECTORY}/${GO_ARCHIVE}" \
      || error_exit 'Could not install go.'
    export PATH=${PATH}:/usr/local/go/bin
  fi
  install_go_pkg
  echo 'Go up-to-date.'
}

