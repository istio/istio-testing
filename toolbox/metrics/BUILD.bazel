load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//docker:docker.bzl", "docker_build")

go_library(
    name = "go_default_library",
    srcs = [
        "buildFreshness.go",
        "main.go",
    ],
    visibility = ["//visibility:private"],
    deps = [
        "//toolbox/util:go_default_library",
        "//vendor/github.com/hashicorp/go-multierror:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/cloud.google.com/go/storage:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

go_binary(
    name = "fetcher",
    gc_linkopts = [
        "-linkmode",
        "external",
        "-extldflags",
        "-static",
    ],
    library = ":go_default_library",
    visibility = ["//visibility:public"],
)

docker_build(
    name = "metrics_fetcher",
    base = "@distroless//image:image.tar",
    cmd = ["./fetcher"],
    files = [":fetcher"],
)

go_binary(
    name = "metrics",
    library = ":go_default_library",
    visibility = ["//visibility:public"],
)
