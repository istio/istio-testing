---
plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/istio-prow/{{if eq .Spec.Type "presubmit"}}pull/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else}}.{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'

sinker:
  resync_period: 1h
  max_prowjob_age: 168h
  max_pod_age: 12h

deck:
  tide_update_period: 1s

prowjob_namespace: default
pod_namespace: test-pods

blocked_branches: &blocked_branches
  release-0.1: &blocking_merge
    required_status_checks:
      contexts:
      - "merges-blocked-needs-admin"
    protect: true
  release-0.2: *blocking_merge
  release-0.3: *blocking_merge
  release-0.3.0: *blocking_merge
  release-0.4: *blocking_merge
  release-0.4.0: *blocking_merge
  release-0.5: *blocking_merge
  release-0.6: *blocking_merge
  release-0.7: *blocking_merge
  release-0.8: *blocking_merge
  master:
    protect: true

branch-protection:
  allow_disabled_policies: true
  orgs:
    istio:
      required_status_checks:
        contexts:
        - cla/google
      required_pull_request_reviews:
        required_approving_review_count: 1
        dismissal_restrictions:
          teams:
          - repo-admins
      restrictions:
        teams:
        - repo-admins
      repos:
        api:
          protect: false
          branches:
            <<: *blocked_branches
        istio:
          protect: false
          required_status_checks:
            contexts:
            - "ci/circleci: build"
            - "ci/circleci: codecov"
            - "ci/circleci: e2e-simple"
            - "ci/circleci: lint"
            - "ci/circleci: test"
          branches:
            <<: *blocked_branches
            collab-gcp-identity:
              protect: true
              restrictions:
                teams:
                - istio-hackers
            release-0.8:
              protect: true
              required_status_checks:
                contexts:
                - "ci/circleci: dependencies"
                - "ci/circleci: e2e-pilot"
                - "ci/circleci: e2e-pilot-noauth-v1alpha3-v2"
            master:
              protect: true
              required_status_checks:
                contexts:
                - "ci/circleci: e2e-pilot-auth-v1alpha3-v2"
                # https://github.com/istio/istio/issues/6309
                # - "ci/circleci: e2e-mixer-noauth-v1alpha3-v2"

        istio.github.io:
          protect: false
          required_status_checks:
            contexts:
            - deploy/netlify
          branches:
            <<: *blocked_branches
        proxy:
          protect: false
          required_status_checks:
            contexts:
            - "ci/circleci: build"
          branches:
            <<: *blocked_branches
            endpoints-v1.1.x: *blocking_merge
            endpoints-v1.2.x: *blocking_merge
        test-infra:
          protect: false
          branches:
            master:
              protect: true

tide:
  queries:
  - repos:
    - istio/api
    - istio/test-infra
    - istio/istio.github.io
    - istio/istio
    - istio/proxy
    labels:
    - lgtm
    - approved
    - "cla: yes"
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  merge_method:
    istio/api: squash
    istio/istio.github.io: squash
    istio/istio: squash
    istio/proxy: squash
    istio/test-infra: squash
  target_url: https://prow.istio.io/tide.html

  context_options:
    from-branch-protection: true
    skip-unknown-contexts: true

presets:
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
  volumes:
  - name: service
    secret:
      secretName: service-account
- labels:
    preset-bazel: "true"
  volumeMounts:
  - name: cache-ssd
    mountPath: /home/bootstrap/.cache
  volumes:
  - name: cache-ssd
    hostPath:
      path: /mnt/disks/ssd0
- labels:
    preset-istio-kubeconfig: "true"
  volumeMounts:
  - name: kubeconfig
    mountPath: /home/bootstrap/.kube
  volumes:
  - name: kubeconfig
    secret:
      secretName: istio-e2e-rbac-kubeconfig
- labels:
    preset-daily-kubeconfig: "true"
  volumeMounts:
  - name: kubeconfig
    mountPath: /home/bootstrap/.kube
  volumes:
  - name: kubeconfig
    secret:
      secretName: daily-release-e2e-rbac-kubeconfig

common_qual_branches: &common_qual_branches
- master
- release-0.7
- release-0.8
- release-0.9
- release-1.0

common_e2e_spec: &common_e2e_spec
  containers:
  - image: gcr.io/istio-testing/prowbazel:0.4.9
    args:
    - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
    - "--clean"
    - "--timeout=90"
    # Bazel needs privileged mode in order to sandbox builds.
    securityContext:
      privileged: true
  nodeSelector:
    cloud.google.com/gke-nodepool: new-cluster-pool

common_e2e_labels: &common_e2e_labels
  preset-service-account: "true"

presubmits:
  # PR job triggering definitions.
  # Keys: Full repo name: "org/repo".
  # Values: List of jobs to run when events occur in the repo.
  #   name:          Job name.
  #   trigger:       Regexp commenters can say to trigger the job.
  #   always_run:    Whether to run for every PR. Default is false. If this is
  #                  set then your trigger needs to match "@k8s-bot test this".
  #   context:       GitHub status context.
  #   rerun_command: How should users trigger just this job, as a string, not a
  #                  regex. For example, if the trigger regex is "(e2e )?test",
  #                  then a rerun command might be "e2e test".
  #   skip_report:   If true, then do not set status or comment on GitHub.
  #   spec:          If this exists then run a kubernetes pod with this spec.
  #                  Otherwise, run a Jenkins job.

  istio/proxy:

  - name: proxy-presubmit
    agent: kubernetes
    context: prow/proxy-presubmit.sh
    always_run: true
    rerun_command: "/test proxy-presubmit"
    trigger: "(?m)^/(retest|test (all|proxy-presubmit))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-bazel: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9998
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "24Gi"
            cpu: "7000m"
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

  - name: proxy-presubmit-asan
    agent: kubernetes
    context: prow/proxy-presubmit-asan.sh
    always_run: true
    rerun_command: "/test proxy-presubmit-asan"
    trigger: "(?m)^/(retest|test (all|proxy-presubmit-asan))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-bazel: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9998
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "24Gi"
            cpu: "7000m"
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

  - name: proxy-presubmit-tsan
    agent: kubernetes
    context: prow/proxy-presubmit-tsan.sh
    always_run: true
    rerun_command: "/test proxy-presubmit-tsan"
    trigger: "(?m)^/(retest|test (all|proxy-presubmit-tsan))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-bazel: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9998
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "24Gi"
            cpu: "7000m"
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

  istio/api:

  - name: api-presubmit
    agent: kubernetes
    context: prow/api-presubmit.sh
    always_run: true
    rerun_command: "/test api-presubmit"
    trigger: "(?m)^/(retest|test (all|api-presubmit))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=20"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool


  istio/istio:

  - name: istio-unit-tests
    agent: kubernetes
    context: prow/istio-unit-tests.sh
    branches: *common_qual_branches
    always_run: true
    optional: true
    rerun_command: "/test istio-unit-tests"
    trigger: "(?m)^/(retest|test (all|istio-unit-tests))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-istio-kubeconfig: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        resources:
          requests:
            memory: "16Gi"
            cpu: "7000m"
          limits:
            memory: "20Gi"
            cpu: "8000m"
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

  - name: istio-presubmit
    agent: kubernetes
    context: prow/istio-presubmit.sh
    always_run: true
    rerun_command: "/test istio-presubmit"
    trigger: "(?m)^/(retest|test (all|istio-presubmit))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-istio-kubeconfig: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool
    run_after_success:
    - name: istio-pilot-e2e-envoyv2-v1alpha3
      agent: kubernetes
      context: prow/istio-pilot-e2e-envoyv2-v1alpha3.sh
      optional: true
      rerun_command: "/test istio-pilot-e2e-envoyv2-v1alpha3"
      trigger: "(?m)^/test (istio-pilot-e2e-envoyv2-v1alpha3)?,?(\\s+|$)"
      branches:
      - release-0.8
      - master
      labels:
        preset-service-account: "true"
      max_concurrency: 5
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: istio-pilot-e2e
      agent: kubernetes
      context: prow/istio-pilot-e2e.sh
      branches:
      - release-0.7
      - release-0.8
      rerun_command: "/test istio-pilot-e2e"
      trigger: "(?m)^/test (istio-pilot-e2e)?,?(\\s+|$)"
      labels:
        preset-service-account: "true"
      max_concurrency: 5
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-bookInfoTests
      agent: kubernetes
      context: prow/e2e-bookInfoTests.sh
      branches:
      - release-0.7
      - release-0.8
      rerun_command: "/test e2e-bookInfo"
      trigger: "(?m)^/test (e2e-bookInfo)?,?(\\s+|$)"
      labels:
        preset-service-account: "true"
      max_concurrency: 5
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-bookInfoTests-envoyv2-v1alpha3
      agent: kubernetes
      context: prow/e2e-bookInfoTests-v1alpha3.sh
      optional: true
      rerun_command: "/test e2e-bookInfo-envoyv2-v1alpha3"
      trigger: "(?m)^/test (e2e-bookInfo-envoyv2-v1alpha3)?,?(\\s+|$)"
      branches:
      - release-0.8
      - master
      labels:
        preset-service-account: "true"
      max_concurrency: 5
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-simpleTests
      agent: kubernetes
      context: prow/e2e-simpleTests.sh
      optional: true
      rerun_command: "/test e2e-simple"
      trigger: "(?m)^/test (e2e-simple)?,?(\\s+|$)"
      branches: *common_qual_branches
      labels:
        preset-service-account: "true"
      max_concurrency: 5
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool

  - name: e2e-suite-rbac-no_auth
    context: prow/e2e-suite-rbac-no_auth.sh
    always_run: false
    rerun_command: "/test e2e-suite-rbac-no_auth"
    trigger: "(?m)^/(test e2e-suite-rbac-no_auth)?,?(\\s+|$)"
    agent: kubernetes
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool

  - name: e2e-suite-rbac-auth
    context: prow/e2e-suite-rbac-auth.sh
    always_run: false
    rerun_command: "/test e2e-suite-rbac-auth"
    trigger: "(?m)^/(test e2e-suite-rbac-auth)?,?(\\s+|$)"
    agent: kubernetes
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool

  - name: e2e-cluster_wide-auth
    context: prow/e2e-cluster_wide-auth.sh
    always_run: false
    rerun_command: "/test e2e-cluster_wide-auth"
    trigger: "(?m)^/(test e2e-cluster_wide-auth)?,?(\\s+|$)"
    agent: kubernetes
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool

  - name: istio-pilot-multicluster-e2e
    context: prow/istio-pilot-multicluster-e2e.sh
    always_run: false
    rerun_command: "/test istio-pilot-multicluster-e2e"
    trigger: "(?m)^/(test istio-pilot-multicluster-e2e)?,?(\\s+|$)"
    agent: kubernetes
    branches: *common_qual_branches
    labels:
      <<: *common_e2e_labels
    max_concurrency: 5
    spec:
      <<: *common_e2e_spec

  istio/test-infra:

  - name: test-infra-presubmit
    agent: kubernetes
    context: prow/test-infra-presubmit.sh
    always_run: true
    rerun_command: "/test test-infra-presubmit"
    trigger: "(?m)^/(retest|test (all|test-infra-presubmit))?,?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=20"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9998
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "24Gi"
            cpu: "7000m"
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

  istio-releases/daily-release:

  - name: daily-perf-tests
    agent: kubernetes
    context: prow/daily-perf-tests.sh
    always_run: true
    rerun_command: "/test daily-perf-tests"
    trigger: "(?m)^/(retest|test (all|daily-perf-tests))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-unit-tests
    agent: kubernetes
    context: prow/daily-unit-tests.sh
    always_run: true
    rerun_command: "/test daily-unit-tests"
    trigger: "(?m)^/(retest|test (all|daily-unit-tests))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-istio-kubeconfig: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-pilot-e2e-envoyv2-v1alpha3
    agent: kubernetes
    context: prow/daily-pilot-e2e-envoyv2-v1alpha3.sh
    always_run: true
    rerun_command: "/test daily-pilot-e2e-envoyv2-v1alpha3"
    trigger: "(?m)^/(retest|test (all|daily-pilot-e2e-envoyv2-v1alpha3))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-e2e-rbac-no_auth
    agent: kubernetes
    context: prow/daily-e2e-rbac-no_auth.sh
    always_run: true
    rerun_command: "/test daily-e2e-rbac-no_auth"
    trigger: "(?m)^/(retest|test (all|daily-e2e-rbac-no_auth))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-e2e-rbac-no_auth-default
    agent: kubernetes
    context: prow/daily-e2e-rbac-no_auth-default.sh
    always_run: true
    rerun_command: "/test daily-e2e-rbac-no_auth-default"
    trigger: "(?m)^/(retest|test (all|daily-e2e-rbac-no_auth-default))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-e2e-rbac-auth
    agent: kubernetes
    context: prow/daily-e2e-rbac-auth.sh
    always_run: true
    rerun_command: "/test daily-e2e-rbac-auth"
    trigger: "(?m)^/(retest|test (all|daily-e2e-rbac-auth))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

  - name: daily-e2e-rbac-auth-default
    agent: kubernetes
    context: prow/daily-e2e-rbac-auth-default.sh
    always_run: true
    rerun_command: "/test daily-e2e-rbac-auth-default"
    trigger: "(?m)^/(retest|test (all|daily-e2e-rbac-auth-default))?,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      <<: *common_e2e_spec

postsubmits:

  istio/api:

  - name: api-postsubmit
    agent: kubernetes
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=20"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool

  istio/istio:

  - name: istio-postsubmit
    agent: kubernetes
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-istio-kubeconfig: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
      nodeSelector:
        cloud.google.com/gke-nodepool: new-cluster-pool
    run_after_success:
    - name: e2e-suite-rbac-no_auth
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-suite-rbac-auth
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-suite-rbac-auth-k8s-1.10
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: e2e-cluster_wide-auth
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: istio-pilot-e2e-envoyv2-v1alpha3
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool
    - name: istio-pilot-e2e-envoyv2-v1alpha3-k8s-1.10
      agent: kubernetes
      labels:
        preset-service-account: "true"
      spec:
        containers:
        - image: gcr.io/istio-testing/prowbazel:0.4.9
          args:
          - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=60"
          # Bazel needs privileged mode in order to sandbox builds.
          securityContext:
            privileged: true
        nodeSelector:
          cloud.google.com/gke-nodepool: new-cluster-pool

  istio/proxy:

  - name: proxy-postsubmit
    agent: kubernetes
    context: prow/proxy-postsubmit.sh
    always_run: true
    rerun_command: "/test proxy-postsubmit"
    trigger: "(?m)^/(retest|test (all|proxy-postsubmit))?,?(\\s+|$)"
    branches: *common_qual_branches
    labels:
      preset-service-account: "true"
      preset-bazel: "true"
    spec:
      containers:
      - image: gcr.io/istio-testing/prowbazel:0.4.9
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--clean"
        - "--timeout=60"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9998
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "24Gi"
            cpu: "7000m"
      nodeSelector:
        cloud.google.com/gke-nodepool: build-pool

periodics:

- interval: 10m
  agent: kubernetes
  name: test-infra-cleanup-cluster
  labels:
    preset-service-account: "true"
    preset-istio-kubeconfig: "true"
  spec:
    containers:
    - image: gcr.io/istio-testing/prowbazel:0.4.9
      args:
      - "--repo=github.com/istio/test-infra=master"
      - "--clean"
      - "--timeout=20"
      # Docker needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
    nodeSelector:
      cloud.google.com/gke-nodepool: new-cluster-pool

- interval: 10m
  agent: kubernetes
  name: test-infra-cleanup-cluster
  labels:
    preset-service-account: "true"
    preset-daily-kubeconfig: "true"
  spec:
    containers:
    - image: gcr.io/istio-testing/prowbazel:0.4.9
      args:
      - "--repo=github.com/istio/test-infra=master"
      - "--clean"
      - "--timeout=20"
      # Docker needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
    nodeSelector:
      cloud.google.com/gke-nodepool: new-cluster-pool

- interval: 10m
  agent: kubernetes
  name: test-infra-cleanup-GKE
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/istio-testing/prowbazel:0.4.9
      args:
      - "--repo=github.com/istio/test-infra=master"
      - "--clean"
      - "--timeout=30"
      # Docker needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
    nodeSelector:
      cloud.google.com/gke-nodepool: new-cluster-pool

- interval: 1h
  agent: kubernetes
  name: test-infra-update-deps
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/istio-testing/prowbazel:0.4.9
      args:
      - "--repo=github.com/istio/test-infra=master"
      - "--clean"
      - "--timeout=20"
      securityContext:
        privileged: true
      env:
      - name: GIT_BRANCHES
        value: master,release-0.8
      - name: GIT_BRANCH
        value: master
      volumeMounts:
      - name: oauth
        mountPath: /etc/github
        readOnly: true
    volumes:
    - name: oauth
      secret:
        secretName: oauth-token
    nodeSelector:
      cloud.google.com/gke-nodepool: new-cluster-pool

- interval: 30m
  agent: kubernetes
  name: green-build
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - args:
      - --job=green-build
      - --jobs-dir=build/prow
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://istio-prow/
      - --repo-manifest=https://github.com/istio/manifest,master
      - --repo=green-build
      - --clean
      - --timeout=120
      image: gcr.io/istio-testing/prow-builder:0.5.5
      securityContext:
        privileged: true
      env:
      - name: GIT_BRANCHES
        value: master,release-0.8,release-0.7
      - name: GIT_BRANCH
        value: master
      - name: NETRC
        value: /etc/netrc/
      volumeMounts:
      - name: netrc
        mountPath: /etc/netrc
        readOnly: true
      - name: oauth
        mountPath: /etc/github
        readOnly: true
    volumes:
    - name: oauth
      secret:
        secretName: oauth-token
    - name: netrc
      secret:
        secretName: istio-testing-netrc
    nodeSelector:
      cloud.google.com/gke-nodepool: new-cluster-pool
