# Run update-prow-staging.sh to keep sync this with the master config
job_template: &job_template
  branches:
  - "^prow-staging$"
  decorate: true
  path_alias: istio.io/istio

istio_container: &istio_container
  image: gcr.io/istio-testing/istio-builder:v20190709-959ee177
  # Docker in Docker
  securityContext:
    privileged: true
  resources:
    requests:
      memory: "3Gi"
      cpu: "3000m"
    limits:
      memory: "24Gi"
      cpu: "5000m"

istio_container_with_kind: &istio_container_with_kind
  image: gcr.io/istio-testing/istio-builder:v20190709-959ee177
  # Docker in Docker
  securityContext:
    privileged: true
  resources:
    requests:
      memory: "2Gi"
      cpu: "3000m"
    limits:
      memory: "24Gi"
      cpu: "3000m"

presubmits:

  istio/istio:

  - name: istio-unit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-unit-tests.sh
      nodeSelector:
        testing: test-pool

  - name: istio-lint-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      # Lint requires a large amount of memory
      # See https://github.com/istio/istio/issues/14888 before lowering requests
      - image: gcr.io/istio-testing/istio-builder:v20190709-959ee177
        # Docker in Docker
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "16Gi"
            cpu: "3000m"
          limits:
            memory: "24Gi"
            cpu: "5000m"
        command:
        - entrypoint
        - prow/istio-lint.sh
      nodeSelector:
        testing: test-pool

  - name: istio-racetest-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/racetest.sh
      nodeSelector:
        testing: test-pool

  - name: istio-shellcheck-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/shellcheck.sh
      nodeSelector:
        testing: test-pool

  - name: istio-codecov-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/codecov.sh
      nodeSelector:
        testing: test-pool

  - name: integ-framework-local-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.framework.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-galley-local-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.galley.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-istioctl-local-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.istioctl.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-mixer-local-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.mixer.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-pilot-local-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.pilot.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-security-local-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.security.local.presubmit
      nodeSelector:
        testing: test-pool

  - name: integ-framework-k8s-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.framework.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-galley-k8s-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.galley.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-istioctl-k8s-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.istioctl.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-mixer-k8s-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.mixer.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-pilot-k8s-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.pilot.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-security-k8s-presubmit-tests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.security.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-telemetry-k8s-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.telemetry.kube.presubmit
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-new-install-k8s-presubmit-tests-prow-staging
    <<: *job_template
    optional: true
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.new.installer
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool

  - name: test-e2e-mixer-no_auth-prow-staging
    <<: *job_template
    optional: true
    skip_report: true
    annotations:
      testgrid-create-test-group: "false"
    max_concurrency: 5
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/test-e2e-mixer-no_auth.sh
      nodeSelector:
        testing: test-pool
  - name: istio-pilot-e2e-envoyv2-v1alpha3-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-pilot-e2e-envoyv2-v1alpha3.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-mixer-no_auth-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-mixer-no_auth.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-dashboard-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-dashboard.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-bookInfoTests-envoyv2-v1alpha3-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-bookInfoTests-envoyv2-v1alpha3.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-bookInfoTests-trustdomain-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-bookInfoTests-trustdomain.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTests-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTests-distroless-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests-distroless.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTestsMinProfile-prow-staging
    <<: *job_template
    optional: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests-minProfile.sh
      nodeSelector:
        testing: test-pool

  - name: istio-pilot-multicluster-e2e-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-pilot-multicluster-e2e.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTests-cni-prow-staging
    <<: *job_template
    always_run: false
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests-cni.sh
      nodeSelector:
        testing: test-pool
  - name: istio_auth_sds_e2e-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e_pilotv2_auth_sds.sh
      nodeSelector:
        testing: test-pool
  - name: release-test-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/release-test.sh
      nodeSelector:
        testing: test-pool
  - name: istio_e2e_cloudfoundry-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - make
        - e2e_cloudfoundry
      nodeSelector:
        testing: test-pool

postsubmits:

  istio/istio:
  - name: integ-conformance-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.conformance.local
      nodeSelector:
        testing: test-pool

  - name: integ-framework-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.framework.local
      nodeSelector:
        testing: test-pool

  - name: integ-galley-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.galley.local
      nodeSelector:
        testing: test-pool

  - name: integ-istioctl-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.istioctl.local
      nodeSelector:
        testing: test-pool

  - name: integ-mixer-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.mixer.local
      nodeSelector:
        testing: test-pool

  - name: integ-pilot-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.pilot.local
      nodeSelector:
        testing: test-pool

  - name: integ-security-local-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-local.sh
            - test.integration.security.local
      nodeSelector:
        testing: test-pool

  - name: istio-kind-simpleTest-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container_with_kind
        command:
        - entrypoint
        - prow/e2e-kind-simpleTests.sh
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool

  - name: istio-unit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-unit-tests.sh
      nodeSelector:
        testing: test-pool
  - name: integ-conformance-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.conformance.kube
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-framework-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
        - <<: *istio_container
          command:
            - entrypoint
            - prow/integ-suite-kind.sh
            - test.integration.framework.kube
          # Volumes needed to support KinD running in Kubernetes
          # See https://github.com/kubernetes-sigs/kind/issues/303
          volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-galley-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.galley.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-istioctl-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.istioctl.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-mixer-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.mixer.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-pilot-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.pilot.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool

  - name: integ-security-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.security.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-telemetry-k8s-postsubmit-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - test.integration.telemetry.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTestsMinProfile-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests-minProfile.sh
      nodeSelector:
        testing: test-pool
  - name: istio-integ-race-native-tests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-integ-race-native-tests.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTests-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-simpleTests-non-mcp-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-simpleTests-non-mcp.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-bookInfoTests-envoyv2-v1alpha3-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-bookInfoTests-envoyv2-v1alpha3.sh
      nodeSelector:
        testing: test-pool
  - name: istio-pilot-e2e-envoyv2-v1alpha3-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-pilot-e2e-envoyv2-v1alpha3.sh
      nodeSelector:
        testing: test-pool
  - name: istio-pilot-e2e-envoyv2-v1alpha3-k8s-latest-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/istio-pilot-e2e-envoyv2-v1alpha3-k8s-latest.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-bookInfoTests-envoyv2-v1alpha3-non-mcp-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-bookInfoTests-envoyv2-v1alpha3-non-mcp.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-mixer-no_auth-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-mixer-no_auth.sh
      nodeSelector:
        testing: test-pool
  - name: e2e-dashboard-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e-dashboard.sh
      nodeSelector:
        testing: test-pool
  - name: istio_auth_sds_e2e-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-service-account: "true"
    max_concurrency: 5
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/e2e_pilotv2_auth_sds.sh
      nodeSelector:
        testing: test-pool
  - name: istio_e2e_cloudfoundry-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    optional: true
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - make
        - e2e_cloudfoundry
      nodeSelector:
        testing: test-pool
  - name: integ-k8s-113-postsubmit-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    decoration_config:
      timeout: 14400000000000 # 4 hours
    spec:
      containers:
      - <<: *istio_container
        # The node image must be kept in sync with the kind version we use.
        # See docker/istio/shared/tools/install-golang.sh for the kind image
        # https://github.com/kubernetes-sigs/kind/releases for node corresponding node image
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - --node-image
        - kindest/node:v1.13.6
        - test.integration.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: integ-k8s-112-postsubmit-prow-staging
    <<: *job_template
    annotations:
      testgrid-create-test-group: "false"
    decoration_config:
      timeout: 14400000000000 # 4 hours
    spec:
      containers:
      - <<: *istio_container
        # The node image must be kept in sync with the kind version we use.
        # See docker/istio/shared/tools/install-golang.sh for the kind image
        # https://github.com/kubernetes-sigs/kind/releases for node corresponding node image
        command:
        - entrypoint
        - prow/integ-suite-kind.sh
        - --node-image
        - kindest/node:v1.12.8
        - test.integration.kube
        # Volumes needed to support KinD running in Kubernetes
        # See https://github.com/kubernetes-sigs/kind/issues/303
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      nodeSelector:
        testing: test-pool
  - name: istio-codecov-prow-staging
    <<: *job_template
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - <<: *istio_container
        command:
        - entrypoint
        - prow/codecov.sh
      nodeSelector:
        testing: test-pool
